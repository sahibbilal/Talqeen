{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport loadScript from 'load-script2';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar eventNames = ['onReady', 'onStateChange', 'onPlaybackQualityChange', 'onPlaybackRateChange', 'onError', 'onApiChange'];\n\n/* global window */\n\nfunction loadSdk() {\n  return new Promise(function (resolve, reject) {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      // A YouTube SDK is already loaded, so reuse that\n      window.YT.ready(function () {\n        resolve(window.YT);\n      });\n      return;\n    }\n    loadScript('https://www.youtube.com/iframe_api', function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        window.YT.ready(function () {\n          resolve(window.YT);\n        });\n      }\n    });\n  });\n}\nvar sdk = null;\nfunction getSdk() {\n  if (!sdk) {\n    sdk = loadSdk();\n  }\n  return sdk;\n}\nvar YouTube = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(YouTube, _React$Component);\n  function YouTube(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n    _this.onPlayerReady = _this.onPlayerReady.bind(_assertThisInitialized(_this));\n    _this.onPlayerStateChange = _this.onPlayerStateChange.bind(_assertThisInitialized(_this));\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = YouTube.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.playerInstance) {\n      this.playerInstance.destroy();\n    }\n  };\n  _proto.onPlayerReady = function onPlayerReady(event) {\n    var _this$props = this.props,\n      volume = _this$props.volume,\n      muted = _this$props.muted,\n      suggestedQuality = _this$props.suggestedQuality,\n      playbackRate = _this$props.playbackRate;\n    if (typeof volume !== 'undefined') {\n      event.target.setVolume(volume * 100);\n    }\n    if (typeof muted !== 'undefined') {\n      if (muted) {\n        event.target.mute();\n      } else {\n        event.target.unMute();\n      }\n    }\n    if (typeof suggestedQuality !== 'undefined') {\n      event.target.setPlaybackQuality(suggestedQuality);\n    }\n    if (typeof playbackRate !== 'undefined') {\n      event.target.setPlaybackRate(playbackRate);\n    }\n    this.resolvePlayer(event.target);\n  };\n  _proto.onPlayerStateChange = function onPlayerStateChange(event) {\n    var _this$props2 = this.props,\n      onCued = _this$props2.onCued,\n      onBuffering = _this$props2.onBuffering,\n      onPause = _this$props2.onPause,\n      onPlaying = _this$props2.onPlaying,\n      onEnd = _this$props2.onEnd;\n    var State = YT.PlayerState; // eslint-disable-line no-undef\n\n    switch (event.data) {\n      case State.CUED:\n        onCued(event);\n        break;\n      case State.BUFFERING:\n        onBuffering(event);\n        break;\n      case State.PAUSED:\n        onPause(event);\n        break;\n      case State.PLAYING:\n        onPlaying(event);\n        break;\n      case State.ENDED:\n        onEnd(event);\n        break;\n    }\n  }\n  /**\n   * @private\n   */;\n\n  _proto.getPlayerParameters = function getPlayerParameters() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      autoplay: this.props.autoplay,\n      cc_load_policy: this.props.showCaptions ? 1 : 0,\n      controls: this.props.controls ? 1 : 0,\n      disablekb: this.props.disableKeyboard ? 1 : 0,\n      fs: this.props.allowFullscreen ? 1 : 0,\n      hl: this.props.lang,\n      iv_load_policy: this.props.annotations ? 1 : 3,\n      start: this.props.startSeconds,\n      end: this.props.endSeconds,\n      modestbranding: this.props.modestBranding ? 1 : 0,\n      playsinline: this.props.playsInline ? 1 : 0,\n      rel: this.props.showRelatedVideos ? 1 : 0\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      videoId: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      playerVars: this.getPlayerParameters(),\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n    this.player.then(function (player) {\n      propNames.forEach(function (name) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var value = _this3.props[name];\n        switch (name) {\n          case 'muted':\n            if (value) {\n              player.mute();\n            } else {\n              player.unMute();\n            }\n            break;\n          case 'suggestedQuality':\n            player.setPlaybackQuality(value);\n            break;\n          case 'volume':\n            player.setVolume(value * 100);\n            break;\n          case 'paused':\n            if (value && player.getPlayerState() !== 2) {\n              player.pauseVideo();\n            } else if (!value && player.getPlayerState() === 2) {\n              player.playVideo();\n            }\n            break;\n          case 'id':\n          case 'className':\n          case 'width':\n          case 'height':\n            player.getIframe()[name] = value; // eslint-disable-line no-param-reassign\n\n            break;\n          case 'video':\n            if (!value) {\n              player.stopVideo();\n            } else {\n              var _this3$props = _this3.props,\n                startSeconds = _this3$props.startSeconds,\n                endSeconds = _this3$props.endSeconds,\n                autoplay = _this3$props.autoplay;\n              var opts = {\n                videoId: value,\n                startSeconds: startSeconds || 0,\n                endSeconds: endSeconds\n              };\n              if (autoplay) {\n                player.loadVideoById(opts);\n              } else {\n                player.cueVideoById(opts);\n              }\n            }\n            break;\n        }\n      });\n    });\n  }\n  /**\n   * @private\n   */;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n    var volume = this.props.volume;\n    this.player = getSdk().then(function (YT) {\n      return new Promise(function (resolve) {\n        _this4.resolvePlayer = resolve;\n        var player = new YT.Player(_this4.container, _this4.getInitialOptions()); // Store the instance directly so we can destroy it sync in\n        // `componentWillUnmount`.\n\n        _this4.playerInstance = player;\n        eventNames.forEach(function (name) {\n          player.addEventListener(name, function (event) {\n            // eslint-disable-next-line react/destructuring-assignment\n            var handler = _this4.props[name];\n            if (handler) {\n              handler(event);\n            }\n          });\n        });\n      });\n    });\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n      id = _this$props3.id,\n      className = _this$props3.className,\n      style = _this$props3.style;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n  return YouTube;\n}(React.Component);\nif (process.env.NODE_ENV !== 'production') {\n  YouTube.propTypes = {\n    /**\n     * An 11-character string representing a YouTube video ID..\n     */\n    video: PropTypes.string,\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n    // Player parameters\n\n    /**\n     * Whether the video should start playing automatically.\n     *\n     * https://developers.google.com/youtube/player_parameters#autoplay\n     */\n    autoplay: PropTypes.bool,\n    /**\n     * Whether to show captions below the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#cc_load_policy\n     */\n    showCaptions: PropTypes.bool,\n    /**\n     * Whether to show video controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#controls\n     */\n    controls: PropTypes.bool,\n    /**\n     * Ignore keyboard controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#disablekb\n     */\n    disableKeyboard: PropTypes.bool,\n    /**\n     * Whether to display the fullscreen button.\n     *\n     * https://developers.google.com/youtube/player_parameters#fs\n     */\n    allowFullscreen: PropTypes.bool,\n    /**\n     * The player's interface language. The parameter value is an ISO 639-1\n     * two-letter language code or a fully specified locale.\n     *\n     * https://developers.google.com/youtube/player_parameters#hl\n     */\n    lang: PropTypes.string,\n    /**\n     * Whether to show annotations on top of the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#iv_load_policy\n     */\n    annotations: PropTypes.bool,\n    /**\n     * Time in seconds at which to start playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#start\n     */\n    startSeconds: PropTypes.number,\n    /**\n     * Time in seconds at which to stop playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#end\n     */\n    endSeconds: PropTypes.number,\n    /**\n     * Remove most YouTube logos from the player.\n     *\n     * https://developers.google.com/youtube/player_parameters#modestbranding\n     */\n    modestBranding: PropTypes.bool,\n    /**\n     * Whether to play the video inline on iOS, instead of fullscreen.\n     *\n     * https://developers.google.com/youtube/player_parameters#playsinline\n     */\n    playsInline: PropTypes.bool,\n    /**\n     * Whether to show related videos after the video is over.\n     *\n     * https://developers.google.com/youtube/player_parameters#rel\n     */\n    showRelatedVideos: PropTypes.bool,\n    /**\n     * The playback volume, **as a number between 0 and 1**.\n     */\n    volume: PropTypes.number,\n    /**\n     * Whether the video's sound should be muted.\n     */\n    muted: PropTypes.bool,\n    /**\n     * The suggested playback quality.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#Playback_quality\n     */\n    suggestedQuality: PropTypes.string,\n    /**\n     * Playback speed.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     */\n    playbackRate: PropTypes.number,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the YouTube player API has loaded.\n     */\n    onReady: PropTypes.func,\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n    /**\n     * Sent when the video is cued and ready to play.\n     */\n    onCued: PropTypes.func,\n    /**\n     * Sent when the video is buffering.\n     */\n    onBuffering: PropTypes.func,\n    /**\n     * Sent when playback has been started or resumed.\n     */\n    onPlaying: PropTypes.func,\n    /**\n     * Sent when playback has been paused.\n     */\n    onPause: PropTypes.func,\n    /**\n     * Sent when playback has stopped.\n     */\n    onEnd: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onPlaybackRateChange: PropTypes.func,\n    onPlaybackQualityChange: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n  };\n}\n\nYouTube.defaultProps = {\n  autoplay: false,\n  showCaptions: false,\n  controls: true,\n  disableKeyboard: false,\n  allowFullscreen: true,\n  annotations: true,\n  modestBranding: false,\n  playsInline: false,\n  showRelatedVideos: true,\n  onCued: function onCued() {},\n  onBuffering: function onBuffering() {},\n  onPlaying: function onPlaying() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {}\n};\nexport { YouTube as default };","map":{"version":3,"names":["React","PropTypes","loadScript","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","eventNames","loadSdk","Promise","resolve","reject","window","YT","ready","err","sdk","getSdk","YouTube","_React$Component","props","_this","call","onPlayerReady","bind","onPlayerStateChange","refContainer","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","componentWillUnmount","playerInstance","destroy","event","_this$props","volume","muted","suggestedQuality","playbackRate","target","setVolume","mute","unMute","setPlaybackQuality","setPlaybackRate","resolvePlayer","_this$props2","onCued","onBuffering","onPause","onPlaying","onEnd","State","PlayerState","data","CUED","BUFFERING","PAUSED","PLAYING","ENDED","getPlayerParameters","autoplay","cc_load_policy","showCaptions","controls","disablekb","disableKeyboard","fs","allowFullscreen","hl","lang","iv_load_policy","annotations","start","startSeconds","end","endSeconds","modestbranding","modestBranding","playsinline","playsInline","rel","showRelatedVideos","getInitialOptions","videoId","video","width","height","playerVars","events","onReady","onStateChange","propNames","_this3","player","then","forEach","value","getPlayerState","pauseVideo","playVideo","getIframe","stopVideo","_this3$props","opts","loadVideoById","cueVideoById","_this4","Player","container","addEventListener","handler","render","_this$props3","id","className","style","createElement","ref","Component","process","env","NODE_ENV","propTypes","string","object","oneOfType","number","paused","bool","func","onError","onPlaybackRateChange","onPlaybackQualityChange","defaultProps","default"],"sources":["G:/webTech/Project 2/kidseducation/node_modules/@u-wave/react-youtube/dist/react-youtube.es.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport loadScript from 'load-script2';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = ['onReady', 'onStateChange', 'onPlaybackQualityChange', 'onPlaybackRateChange', 'onError', 'onApiChange'];\n\n/* global window */\n\nfunction loadSdk() {\n  return new Promise(function (resolve, reject) {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      // A YouTube SDK is already loaded, so reuse that\n      window.YT.ready(function () {\n        resolve(window.YT);\n      });\n      return;\n    }\n\n    loadScript('https://www.youtube.com/iframe_api', function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        window.YT.ready(function () {\n          resolve(window.YT);\n        });\n      }\n    });\n  });\n}\n\nvar sdk = null;\nfunction getSdk() {\n  if (!sdk) {\n    sdk = loadSdk();\n  }\n\n  return sdk;\n}\n\nvar YouTube = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(YouTube, _React$Component);\n\n  function YouTube(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onPlayerReady = _this.onPlayerReady.bind(_assertThisInitialized(_this));\n    _this.onPlayerStateChange = _this.onPlayerStateChange.bind(_assertThisInitialized(_this));\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = YouTube.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.playerInstance) {\n      this.playerInstance.destroy();\n    }\n  };\n\n  _proto.onPlayerReady = function onPlayerReady(event) {\n    var _this$props = this.props,\n        volume = _this$props.volume,\n        muted = _this$props.muted,\n        suggestedQuality = _this$props.suggestedQuality,\n        playbackRate = _this$props.playbackRate;\n\n    if (typeof volume !== 'undefined') {\n      event.target.setVolume(volume * 100);\n    }\n\n    if (typeof muted !== 'undefined') {\n      if (muted) {\n        event.target.mute();\n      } else {\n        event.target.unMute();\n      }\n    }\n\n    if (typeof suggestedQuality !== 'undefined') {\n      event.target.setPlaybackQuality(suggestedQuality);\n    }\n\n    if (typeof playbackRate !== 'undefined') {\n      event.target.setPlaybackRate(playbackRate);\n    }\n\n    this.resolvePlayer(event.target);\n  };\n\n  _proto.onPlayerStateChange = function onPlayerStateChange(event) {\n    var _this$props2 = this.props,\n        onCued = _this$props2.onCued,\n        onBuffering = _this$props2.onBuffering,\n        onPause = _this$props2.onPause,\n        onPlaying = _this$props2.onPlaying,\n        onEnd = _this$props2.onEnd;\n    var State = YT.PlayerState; // eslint-disable-line no-undef\n\n    switch (event.data) {\n      case State.CUED:\n        onCued(event);\n        break;\n\n      case State.BUFFERING:\n        onBuffering(event);\n        break;\n\n      case State.PAUSED:\n        onPause(event);\n        break;\n\n      case State.PLAYING:\n        onPlaying(event);\n        break;\n\n      case State.ENDED:\n        onEnd(event);\n        break;\n\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getPlayerParameters = function getPlayerParameters() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      autoplay: this.props.autoplay,\n      cc_load_policy: this.props.showCaptions ? 1 : 0,\n      controls: this.props.controls ? 1 : 0,\n      disablekb: this.props.disableKeyboard ? 1 : 0,\n      fs: this.props.allowFullscreen ? 1 : 0,\n      hl: this.props.lang,\n      iv_load_policy: this.props.annotations ? 1 : 3,\n      start: this.props.startSeconds,\n      end: this.props.endSeconds,\n      modestbranding: this.props.modestBranding ? 1 : 0,\n      playsinline: this.props.playsInline ? 1 : 0,\n      rel: this.props.showRelatedVideos ? 1 : 0\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      videoId: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      playerVars: this.getPlayerParameters(),\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    this.player.then(function (player) {\n      propNames.forEach(function (name) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var value = _this3.props[name];\n\n        switch (name) {\n          case 'muted':\n            if (value) {\n              player.mute();\n            } else {\n              player.unMute();\n            }\n\n            break;\n\n          case 'suggestedQuality':\n            player.setPlaybackQuality(value);\n            break;\n\n          case 'volume':\n            player.setVolume(value * 100);\n            break;\n\n          case 'paused':\n            if (value && player.getPlayerState() !== 2) {\n              player.pauseVideo();\n            } else if (!value && player.getPlayerState() === 2) {\n              player.playVideo();\n            }\n\n            break;\n\n          case 'id':\n          case 'className':\n          case 'width':\n          case 'height':\n            player.getIframe()[name] = value; // eslint-disable-line no-param-reassign\n\n            break;\n\n          case 'video':\n            if (!value) {\n              player.stopVideo();\n            } else {\n              var _this3$props = _this3.props,\n                  startSeconds = _this3$props.startSeconds,\n                  endSeconds = _this3$props.endSeconds,\n                  autoplay = _this3$props.autoplay;\n              var opts = {\n                videoId: value,\n                startSeconds: startSeconds || 0,\n                endSeconds: endSeconds\n              };\n\n              if (autoplay) {\n                player.loadVideoById(opts);\n              } else {\n                player.cueVideoById(opts);\n              }\n            }\n\n            break;\n\n        }\n      });\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var volume = this.props.volume;\n    this.player = getSdk().then(function (YT) {\n      return new Promise(function (resolve) {\n        _this4.resolvePlayer = resolve;\n        var player = new YT.Player(_this4.container, _this4.getInitialOptions()); // Store the instance directly so we can destroy it sync in\n        // `componentWillUnmount`.\n\n        _this4.playerInstance = player;\n        eventNames.forEach(function (name) {\n          player.addEventListener(name, function (event) {\n            // eslint-disable-next-line react/destructuring-assignment\n            var handler = _this4.props[name];\n\n            if (handler) {\n              handler(event);\n            }\n          });\n        });\n      });\n    });\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        id = _this$props3.id,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n\n  return YouTube;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  YouTube.propTypes = {\n    /**\n     * An 11-character string representing a YouTube video ID..\n     */\n    video: PropTypes.string,\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n    // Player parameters\n\n    /**\n     * Whether the video should start playing automatically.\n     *\n     * https://developers.google.com/youtube/player_parameters#autoplay\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Whether to show captions below the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#cc_load_policy\n     */\n    showCaptions: PropTypes.bool,\n\n    /**\n     * Whether to show video controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#controls\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Ignore keyboard controls.\n     *\n     * https://developers.google.com/youtube/player_parameters#disablekb\n     */\n    disableKeyboard: PropTypes.bool,\n\n    /**\n     * Whether to display the fullscreen button.\n     *\n     * https://developers.google.com/youtube/player_parameters#fs\n     */\n    allowFullscreen: PropTypes.bool,\n\n    /**\n     * The player's interface language. The parameter value is an ISO 639-1\n     * two-letter language code or a fully specified locale.\n     *\n     * https://developers.google.com/youtube/player_parameters#hl\n     */\n    lang: PropTypes.string,\n\n    /**\n     * Whether to show annotations on top of the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#iv_load_policy\n     */\n    annotations: PropTypes.bool,\n\n    /**\n     * Time in seconds at which to start playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#start\n     */\n    startSeconds: PropTypes.number,\n\n    /**\n     * Time in seconds at which to stop playing the video.\n     *\n     * https://developers.google.com/youtube/player_parameters#end\n     */\n    endSeconds: PropTypes.number,\n\n    /**\n     * Remove most YouTube logos from the player.\n     *\n     * https://developers.google.com/youtube/player_parameters#modestbranding\n     */\n    modestBranding: PropTypes.bool,\n\n    /**\n     * Whether to play the video inline on iOS, instead of fullscreen.\n     *\n     * https://developers.google.com/youtube/player_parameters#playsinline\n     */\n    playsInline: PropTypes.bool,\n\n    /**\n     * Whether to show related videos after the video is over.\n     *\n     * https://developers.google.com/youtube/player_parameters#rel\n     */\n    showRelatedVideos: PropTypes.bool,\n\n    /**\n     * The playback volume, **as a number between 0 and 1**.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * Whether the video's sound should be muted.\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * The suggested playback quality.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#Playback_quality\n     */\n    suggestedQuality: PropTypes.string,\n\n    /**\n     * Playback speed.\n     *\n     * https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     */\n    playbackRate: PropTypes.number,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the YouTube player API has loaded.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Sent when the video is cued and ready to play.\n     */\n    onCued: PropTypes.func,\n\n    /**\n     * Sent when the video is buffering.\n     */\n    onBuffering: PropTypes.func,\n\n    /**\n     * Sent when playback has been started or resumed.\n     */\n    onPlaying: PropTypes.func,\n\n    /**\n     * Sent when playback has been paused.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Sent when playback has stopped.\n     */\n    onEnd: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onPlaybackRateChange: PropTypes.func,\n    onPlaybackQualityChange: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nYouTube.defaultProps = {\n  autoplay: false,\n  showCaptions: false,\n  controls: true,\n  disableKeyboard: false,\n  allowFullscreen: true,\n  annotations: true,\n  modestBranding: false,\n  playsInline: false,\n  showRelatedVideos: true,\n  onCued: function onCued() {},\n  onBuffering: function onBuffering() {},\n  onPlaying: function onPlaying() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {}\n};\n\nexport { YouTube as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}